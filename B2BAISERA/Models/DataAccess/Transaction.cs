//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace B2BAISERA.Models.DataAccess
{
    public partial class Transaction
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual string TicketNo
        {
            get;
            set;
        }
    
        public virtual string ClientTag
        {
            get;
            set;
        }
    
        public virtual string CreatedWho
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreatedWhen
        {
            get;
            set;
        }
    
        public virtual string ChangedWho
        {
            get;
            set;
        }
    
        public virtual System.DateTime ChangedWhen
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<TransactionData> TransactionDatas
        {
            get
            {
                if (_transactionDatas == null)
                {
                    var newCollection = new FixupCollection<TransactionData>();
                    newCollection.CollectionChanged += FixupTransactionDatas;
                    _transactionDatas = newCollection;
                }
                return _transactionDatas;
            }
            set
            {
                if (!ReferenceEquals(_transactionDatas, value))
                {
                    var previousValue = _transactionDatas as FixupCollection<TransactionData>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTransactionDatas;
                    }
                    _transactionDatas = value;
                    var newValue = value as FixupCollection<TransactionData>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTransactionDatas;
                    }
                }
            }
        }
        private ICollection<TransactionData> _transactionDatas;

        #endregion
        #region Association Fixup
    
        private void FixupTransactionDatas(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TransactionData item in e.NewItems)
                {
                    item.Transaction = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TransactionData item in e.OldItems)
                {
                    if (ReferenceEquals(item.Transaction, this))
                    {
                        item.Transaction = null;
                    }
                }
            }
        }

        #endregion
    }
}
